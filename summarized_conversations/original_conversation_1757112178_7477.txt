{'role': 'assistant', 'content': 'Now let me create the core UI components:\n\n\n<function_calls>\n<create-file file_path="frontend/src/components/ui/Button.tsx">\nimport React from \'react\';\nimport { cn } from \'@/lib/utils\';\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: \'primary\' | \'secondary\' | \'outline\' | \'ghost\' | \'danger\';\n  size?: \'sm\' | \'md\' | \'lg\';\n  isLoading?: boolean;\n  leftIcon?: React.ReactNode;\n  rightIcon?: React.ReactNode;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ \n    className, \n    variant = \'primary\', \n    size = \'md\', \n    isLoading = false,\n    leftIcon,\n    rightIcon,\n    children, \n    disabled,\n    ...props \n  }, ref) => {\n    const baseClasses = \'inline-flex items-center justify-center font-medium rounded-lg transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed\';\n    \n    const variants = {\n      primary: \'bg-primary-500 text-white hover:bg-primary-600 focus:ring-primary-500 shadow-md hover:shadow-lg transform hover:-translate-y-0.5\',\n      secondary: \'bg-white text-primary-500 border-2 border-primary-500 hover:bg-primary-50 focus:ring-primary-500\',\n      outline: \'bg-transparent text-secondary-700 border-2 border-secondary-300 hover:bg-secondary-50 focus:ring-secondary-500\',\n      ghost: \'bg-transparent text-secondary-600 hover:bg-secondary-100 focus:ring-secondary-500\',\n      danger: \'bg-error-500 text-white hover:bg-error-600 focus:ring-error-500 shadow-md hover:shadow-lg\',\n    };\n\n    const sizes = {\n      sm: \'px-4 py-2 text-sm\',\n      md: \'px-6 py-3 text-base\',\n      lg: \'px-8 py-4 text-lg\',\n    };\n\n    return (\n      <button\n        className={cn(\n          baseClasses,\n          variants[variant],\n          sizes[size],\n          isLoading && \'cursor-not-allowed\',\n          className\n        )}\n        disabled={disabled || isLoading}\n        ref={ref}\n        {...props}\n      >\n        {isLoading && (\n          <svg\n            className="animate-spin -ml-1 mr-3 h-5 w-5"\n            xmlns="http://www.w3.org/2000/svg"\n            fill="none"\n            viewBox="0 0 24 24"\n          >\n            <circle\n              className="opacity-25"\n              cx="12"\n              cy="12"\n              r="10"\n              stroke="currentColor"\n              strokeWidth="4"\n            />\n            <path\n              className="opacity-75"\n              fill="currentColor"\n              d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"\n            />\n          </svg>\n        )}\n        {!isLoading && leftIcon && (\n          <span className="mr-2">{leftIcon}</span>\n        )}\n        {children}\n        {!isLoading && rightIcon && (\n          <span className="ml-2">{rightIcon}</span>\n        )}\n      </button>\n    );\n  }\n);\n\nButton.displayName = \'Button\';\n\nexport default Button;\n</create-file>\n</function_calls>'}