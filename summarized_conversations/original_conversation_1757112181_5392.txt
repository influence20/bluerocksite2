{'role': 'assistant', 'content': '<function_calls>\n<create-file file_path="frontend/src/components/ui/LoadingSpinner.tsx">\nimport React from \'react\';\nimport { cn } from \'@/lib/utils\';\n\ninterface LoadingSpinnerProps {\n  size?: \'sm\' | \'md\' | \'lg\' | \'xl\';\n  color?: \'primary\' | \'secondary\' | \'white\';\n  className?: string;\n}\n\nconst LoadingSpinner: React.FC<LoadingSpinnerProps> = ({\n  size = \'md\',\n  color = \'primary\',\n  className,\n}) => {\n  const sizeClasses = {\n    sm: \'w-4 h-4\',\n    md: \'w-6 h-6\',\n    lg: \'w-8 h-8\',\n    xl: \'w-12 h-12\',\n  };\n\n  const colorClasses = {\n    primary: \'text-primary-500\',\n    secondary: \'text-secondary-500\',\n    white: \'text-white\',\n  };\n\n  return (\n    <svg\n      className={cn(\n        \'animate-spin\',\n        sizeClasses[size],\n        colorClasses[color],\n        className\n      )}\n      xmlns="http://www.w3.org/2000/svg"\n      fill="none"\n      viewBox="0 0 24 24"\n    >\n      <circle\n        className="opacity-25"\n        cx="12"\n        cy="12"\n        r="10"\n        stroke="currentColor"\n        strokeWidth="4"\n      />\n      <path\n        className="opacity-75"\n        fill="currentColor"\n        d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"\n      />\n    </svg>\n  );\n};\n\n// Full page loading component\ninterface PageLoadingProps {\n  message?: string;\n}\n\nconst PageLoading: React.FC<PageLoadingProps> = ({ \n  message = \'Loading...\' \n}) => {\n  return (\n    <div className="fixed inset-0 z-50 flex items-center justify-center bg-white">\n      <div className="text-center">\n        <LoadingSpinner size="xl" />\n        <p className="mt-4 text-lg text-secondary-600">{message}</p>\n      </div>\n    </div>\n  );\n};\n\n// Inline loading component\ninterface InlineLoadingProps {\n  message?: string;\n  size?: \'sm\' | \'md\' | \'lg\';\n}\n\nconst InlineLoading: React.FC<InlineLoadingProps> = ({ \n  message = \'Loading...\', \n  size = \'md\' \n}) => {\n  return (\n    <div className="flex items-center justify-center py-8">\n      <div className="text-center">\n        <LoadingSpinner size={size} />\n        <p className="mt-2 text-sm text-secondary-600">{message}</p>\n      </div>\n    </div>\n  );\n};\n\n// Button loading state\ninterface ButtonLoadingProps {\n  size?: \'sm\' | \'md\' | \'lg\';\n  color?: \'primary\' | \'secondary\' | \'white\';\n}\n\nconst ButtonLoading: React.FC<ButtonLoadingProps> = ({ \n  size = \'sm\', \n  color = \'white\' \n}) => {\n  return (\n    <LoadingSpinner \n      size={size} \n      color={color} \n      className="-ml-1 mr-3" \n    />\n  );\n};\n\nexport { LoadingSpinner, PageLoading, InlineLoading, ButtonLoading };\nexport default LoadingSpinner;\n</create-file>\n</function_calls>'}