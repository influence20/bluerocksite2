{'role': 'assistant', 'content': '<function_calls>\n<create-file file_path="frontend/src/components/ui/Card.tsx">\nimport React from \'react\';\nimport { cn } from \'@/lib/utils\';\n\ninterface CardProps extends React.HTMLAttributes<HTMLDivElement> {\n  variant?: \'default\' | \'elevated\' | \'outlined\' | \'glass\';\n  padding?: \'none\' | \'sm\' | \'md\' | \'lg\';\n  hover?: boolean;\n}\n\nconst Card = React.forwardRef<HTMLDivElement, CardProps>(\n  ({ \n    className, \n    variant = \'default\',\n    padding = \'md\',\n    hover = false,\n    children,\n    ...props \n  }, ref) => {\n    const baseClasses = \'bg-white rounded-xl transition-all duration-300\';\n    \n    const variants = {\n      default: \'shadow-soft border border-secondary-100\',\n      elevated: \'shadow-medium\',\n      outlined: \'border-2 border-secondary-200\',\n      glass: \'bg-white/80 backdrop-blur-md border border-white/20 shadow-soft\',\n    };\n\n    const paddings = {\n      none: \'\',\n      sm: \'p-4\',\n      md: \'p-6\',\n      lg: \'p-8\',\n    };\n\n    const hoverClasses = hover ? \'hover:shadow-large hover:-translate-y-1 cursor-pointer\' : \'\';\n\n    return (\n      <div\n        className={cn(\n          baseClasses,\n          variants[variant],\n          paddings[padding],\n          hoverClasses,\n          className\n        )}\n        ref={ref}\n        {...props}\n      >\n        {children}\n      </div>\n    );\n  }\n);\n\nCard.displayName = \'Card\';\n\n// Card Header Component\ninterface CardHeaderProps extends React.HTMLAttributes<HTMLDivElement> {\n  title?: string;\n  subtitle?: string;\n  action?: React.ReactNode;\n}\n\nconst CardHeader = React.forwardRef<HTMLDivElement, CardHeaderProps>(\n  ({ className, title, subtitle, action, children, ...props }, ref) => {\n    return (\n      <div\n        className={cn(\'flex items-center justify-between mb-6\', className)}\n        ref={ref}\n        {...props}\n      >\n        <div>\n          {title && (\n            <h3 className="text-lg font-semibold text-secondary-900">{title}</h3>\n          )}\n          {subtitle && (\n            <p className="text-sm text-secondary-500 mt-1">{subtitle}</p>\n          )}\n          {children}\n        </div>\n        {action && <div>{action}</div>}\n      </div>\n    );\n  }\n);\n\nCardHeader.displayName = \'CardHeader\';\n\n// Card Content Component\ninterface CardContentProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nconst CardContent = React.forwardRef<HTMLDivElement, CardContentProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <div\n        className={cn(\'\', className)}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\n\nCardContent.displayName = \'CardContent\';\n\n// Card Footer Component\ninterface CardFooterProps extends React.HTMLAttributes<HTMLDivElement> {\n  align?: \'left\' | \'center\' | \'right\' | \'between\';\n}\n\nconst CardFooter = React.forwardRef<HTMLDivElement, CardFooterProps>(\n  ({ className, align = \'left\', ...props }, ref) => {\n    const alignClasses = {\n      left: \'justify-start\',\n      center: \'justify-center\',\n      right: \'justify-end\',\n      between: \'justify-between\',\n    };\n\n    return (\n      <div\n        className={cn(\n          \'flex items-center mt-6 pt-6 border-t border-secondary-100\',\n          alignClasses[align],\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\n\nCardFooter.displayName = \'CardFooter\';\n\nexport { Card, CardHeader, CardContent, CardFooter };\nexport default Card;\n</create-file>\n</function_calls>'}