{'role': 'assistant', 'content': 'Now let me create the main layout components:\n\n<function_calls>\n<create-file file_path="frontend/src/components/layout/Header.tsx">\nimport React, { useState } from \'react\';\nimport Link from \'next/link\';\nimport Image from \'next/image\';\nimport { useRouter } from \'next/router\';\nimport { useAuth } from \'@/lib/auth\';\nimport Button from \'@/components/ui/Button\';\nimport { cn } from \'@/lib/utils\';\n\nconst Header: React.FC = () => {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const { user, isAuthenticated, logout } = useAuth();\n  const router = useRouter();\n\n  const navigation = [\n    { name: \'Home\', href: \'/\' },\n    { name: \'About\', href: \'/about\' },\n    { name: \'Services\', href: \'/services\' },\n    { name: \'Investment Plans\', href: \'/plans\' },\n    { name: \'Markets & Insights\', href: \'/insights\' },\n    { name: \'Contact\', href: \'/contact\' },\n  ];\n\n  const isActivePath = (path: string) => {\n    if (path === \'/\') {\n      return router.pathname === \'/\';\n    }\n    return router.pathname.startsWith(path);\n  };\n\n  const handleLogout = () => {\n    logout();\n    router.push(\'/\');\n  };\n\n  return (\n    <header className="bg-white shadow-soft sticky top-0 z-40">\n      <div className="container-custom">\n        <div className="flex items-center justify-between h-16 lg:h-20">\n          {/* Logo */}\n          <Link href="/" className="flex items-center space-x-3">\n            <Image\n              src="/assets/brand/bluerock-logo.png"\n              alt="BlueRock Asset Management"\n              width={40}\n              height={40}\n              className="w-10 h-10"\n            />\n            <div className="hidden sm:block">\n              <span className="text-xl font-bold text-primary-500">BlueRock</span>\n              <span className="text-sm text-secondary-500 block -mt-1">Asset Management</span>\n            </div>\n          </Link>\n\n          {/* Desktop Navigation */}\n          <nav className="hidden lg:flex items-center space-x-8">\n            {navigation.map((item) => (\n              <Link\n                key={item.name}\n                href={item.href}\n                className={cn(\n                  \'nav-link\',\n                  isActivePath(item.href) && \'active\'\n                )}\n              >\n                {item.name}\n              </Link>\n            ))}\n          </nav>\n\n          {/* Desktop Auth Buttons */}\n          <div className="hidden lg:flex items-center space-x-4">\n            {isAuthenticated ? (\n              <div className="flex items-center space-x-4">\n                <Link href="/dashboard">\n                  <Button variant="ghost" size="sm">\n                    Dashboard\n                  </Button>\n                </Link>\n                <div className="flex items-center space-x-2">\n                  <span className="text-sm text-secondary-600">\n                    Welcome, {user?.firstName}\n                  </span>\n                  <Button\n                    variant="outline"\n                    size="sm"\n                    onClick={handleLogout}\n                  >\n                    Logout\n                  </Button>\n                </div>\n              </div>\n            ) : (\n              <>\n                <Link href="/login">\n                  <Button variant="ghost" size="sm">\n                    Login\n                  </Button>\n                </Link>\n                <Link href="/register">\n                  <Button variant="primary" size="sm">\n                    Get Started\n                  </Button>\n                </Link>\n              </>\n            )}\n          </div>\n\n          {/* Mobile Menu Button */}\n          <button\n            className="lg:hidden p-2 rounded-md text-secondary-600 hover:text-primary-500 hover:bg-secondary-100"\n            onClick={() => setIsMenuOpen(!isMenuOpen)}\n          >\n            <svg\n              className="w-6 h-6"\n              fill="none"\n              stroke="currentColor"\n              viewBox="0 0 24 24"\n            >\n              {isMenuOpen ? (\n                <path\n                  strokeLinecap="round"\n                  strokeLinejoin="round"\n                  strokeWidth={2}\n                  d="M6 18L18 6M6 6l12 12"\n                />\n              ) : (\n                <path\n                  strokeLinecap="round"\n                  strokeLinejoin="round"\n                  strokeWidth={2}\n                  d="M4 6h16M4 12h16M4 18h16"\n                />\n              )}\n            </svg>\n          </button>\n        </div>\n\n        {/* Mobile Menu */}\n        {isMenuOpen && (\n          <div className="lg:hidden border-t border-secondary-200">\n            <div className="px-2 pt-2 pb-3 space-y-1">\n              {navigation.map((item) => (\n                <Link\n                  key={item.name}\n                  href={item.href}\n                  className={cn(\n                    \'block px-3 py-2 rounded-md text-base font-medium transition-colors duration-200\',\n                    isActivePath(item.href)\n                      ? \'text-primary-500 bg-primary-50\'\n                      : \'text-secondary-600 hover:text-primary-500 hover:bg-secondary-100\'\n                  )}\n                  onClick={() => setIsMenuOpen(false)}\n                >\n                  {item.name}\n                </Link>\n              ))}\n            </div>\n            \n            {/* Mobile Auth Section */}\n            <div className="pt-4 pb-3 border-t border-secondary-200">\n              {isAuthenticated ? (\n                <div className="px-2 space-y-3">\n                  <div className="px-3 py-2">\n                    <p className="text-sm text-secondary-600">\n                      Welcome, {user?.firstName}\n                    </p>\n                  </div>\n                  <Link href="/dashboard" onClick={() => setIsMenuOpen(false)}>\n                    <Button variant="ghost" size="sm" className="w-full justify-start">\n                      Dashboard\n                    </Button>\n                  </Link>\n                  <Button\n                    variant="outline"\n                    size="sm"\n                    className="w-full"\n                    onClick={() => {\n                      handleLogout();\n                      setIsMenuOpen(false);\n                    }}\n                  >\n                    Logout\n                  </Button>\n                </div>\n              ) : (\n                <div className="px-2 space-y-3">\n                  <Link href="/login" onClick={() => setIsMenuOpen(false)}>\n                    <Button variant="ghost" size="sm" className="w-full">\n                      Login\n                    </Button>\n                  </Link>\n                  <Link href="/register" onClick={() => setIsMenuOpen(false)}>\n                    <Button variant="primary" size="sm" className="w-full">\n                      Get Started\n                    </Button>\n                  </Link>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Live Chat Script */}\n      <script \n        src="//code.jivosite.com/widget/foeFKzf8Lf" \n        async \n        dangerouslySetInnerHTML={{\n          __html: \'\'\n        }}\n      />\n    </header>\n  );\n};\n\nexport default Header;\n</create-file>\n</function_calls>'}