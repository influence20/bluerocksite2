{'role': 'assistant', 'content': '<function_calls>\n<create-file file_path="frontend/src/components/ui/Modal.tsx">\nimport React, { useEffect } from \'react\';\nimport { createPortal } from \'react-dom\';\nimport { cn } from \'@/lib/utils\';\n\ninterface ModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  title?: string;\n  size?: \'sm\' | \'md\' | \'lg\' | \'xl\' | \'full\';\n  children: React.ReactNode;\n  closeOnOverlayClick?: boolean;\n  closeOnEscape?: boolean;\n  showCloseButton?: boolean;\n}\n\nconst Modal: React.FC<ModalProps> = ({\n  isOpen,\n  onClose,\n  title,\n  size = \'md\',\n  children,\n  closeOnOverlayClick = true,\n  closeOnEscape = true,\n  showCloseButton = true,\n}) => {\n  useEffect(() => {\n    if (!closeOnEscape) return;\n\n    const handleEscape = (event: KeyboardEvent) => {\n      if (event.key === \'Escape\') {\n        onClose();\n      }\n    };\n\n    if (isOpen) {\n      document.addEventListener(\'keydown\', handleEscape);\n      document.body.style.overflow = \'hidden\';\n    }\n\n    return () => {\n      document.removeEventListener(\'keydown\', handleEscape);\n      document.body.style.overflow = \'unset\';\n    };\n  }, [isOpen, onClose, closeOnEscape]);\n\n  if (!isOpen) return null;\n\n  const sizeClasses = {\n    sm: \'max-w-md\',\n    md: \'max-w-lg\',\n    lg: \'max-w-2xl\',\n    xl: \'max-w-4xl\',\n    full: \'max-w-full mx-4\',\n  };\n\n  const modalContent = (\n    <div className="fixed inset-0 z-50 overflow-y-auto">\n      <div className="flex items-center justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:block sm:p-0">\n        {/* Overlay */}\n        <div\n          className="fixed inset-0 transition-opacity bg-secondary-500 bg-opacity-75 backdrop-blur-sm"\n          onClick={closeOnOverlayClick ? onClose : undefined}\n        />\n\n        {/* Modal */}\n        <div\n          className={cn(\n            \'inline-block w-full overflow-hidden text-left align-bottom transition-all transform bg-white rounded-lg shadow-xl sm:my-8 sm:align-middle\',\n            sizeClasses[size]\n          )}\n        >\n          {/* Header */}\n          {(title || showCloseButton) && (\n            <div className="flex items-center justify-between px-6 py-4 border-b border-secondary-200">\n              {title && (\n                <h3 className="text-lg font-semibold text-secondary-900">\n                  {title}\n                </h3>\n              )}\n              {showCloseButton && (\n                <button\n                  onClick={onClose}\n                  className="text-secondary-400 hover:text-secondary-600 transition-colors duration-200"\n                >\n                  <svg\n                    className="w-6 h-6"\n                    fill="none"\n                    stroke="currentColor"\n                    viewBox="0 0 24 24"\n                  >\n                    <path\n                      strokeLinecap="round"\n                      strokeLinejoin="round"\n                      strokeWidth={2}\n                      d="M6 18L18 6M6 6l12 12"\n                    />\n                  </svg>\n                </button>\n              )}\n            </div>\n          )}\n\n          {/* Content */}\n          <div className="px-6 py-4">\n            {children}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  return createPortal(modalContent, document.body);\n};\n\n// Modal Footer Component\ninterface ModalFooterProps {\n  children: React.ReactNode;\n  align?: \'left\' | \'center\' | \'right\' | \'between\';\n}\n\nconst ModalFooter: React.FC<ModalFooterProps> = ({ \n  children, \n  align = \'right\' \n}) => {\n  const alignClasses = {\n    left: \'justify-start\',\n    center: \'justify-center\',\n    right: \'justify-end\',\n    between: \'justify-between\',\n  };\n\n  return (\n    <div className={cn(\n      \'flex items-center px-6 py-4 mt-6 border-t border-secondary-200 bg-secondary-50\',\n      alignClasses[align]\n    )}>\n      {children}\n    </div>\n  );\n};\n\nexport { Modal, ModalFooter };\nexport default Modal;\n</create-file>\n</function_calls>'}