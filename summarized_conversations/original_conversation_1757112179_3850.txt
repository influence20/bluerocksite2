{'role': 'assistant', 'content': '<function_calls>\n<create-file file_path="frontend/src/components/ui/Input.tsx">\nimport React from \'react\';\nimport { cn } from \'@/lib/utils\';\n\ninterface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  label?: string;\n  error?: string;\n  helperText?: string;\n  leftIcon?: React.ReactNode;\n  rightIcon?: React.ReactNode;\n  isLoading?: boolean;\n}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ \n    className, \n    type = \'text\',\n    label,\n    error,\n    helperText,\n    leftIcon,\n    rightIcon,\n    isLoading,\n    disabled,\n    ...props \n  }, ref) => {\n    const inputClasses = cn(\n      \'block w-full px-4 py-3 border rounded-lg shadow-sm placeholder-secondary-400 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors duration-200\',\n      error \n        ? \'border-error-300 focus:ring-error-500 focus:border-error-500\' \n        : \'border-secondary-300\',\n      leftIcon && \'pl-12\',\n      rightIcon && \'pr-12\',\n      disabled && \'bg-secondary-50 cursor-not-allowed\',\n      className\n    );\n\n    return (\n      <div className="w-full">\n        {label && (\n          <label className="block text-sm font-medium text-secondary-700 mb-2">\n            {label}\n          </label>\n        )}\n        <div className="relative">\n          {leftIcon && (\n            <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">\n              <span className="text-secondary-400">{leftIcon}</span>\n            </div>\n          )}\n          <input\n            type={type}\n            className={inputClasses}\n            disabled={disabled || isLoading}\n            ref={ref}\n            {...props}\n          />\n          {rightIcon && (\n            <div className="absolute inset-y-0 right-0 pr-3 flex items-center">\n              <span className="text-secondary-400">{rightIcon}</span>\n            </div>\n          )}\n          {isLoading && (\n            <div className="absolute inset-y-0 right-0 pr-3 flex items-center">\n              <svg\n                className="animate-spin h-5 w-5 text-secondary-400"\n                xmlns="http://www.w3.org/2000/svg"\n                fill="none"\n                viewBox="0 0 24 24"\n              >\n                <circle\n                  className="opacity-25"\n                  cx="12"\n                  cy="12"\n                  r="10"\n                  stroke="currentColor"\n                  strokeWidth="4"\n                />\n                <path\n                  className="opacity-75"\n                  fill="currentColor"\n                  d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"\n                />\n              </svg>\n            </div>\n          )}\n        </div>\n        {error && (\n          <p className="text-sm text-error-600 mt-1">{error}</p>\n        )}\n        {helperText && !error && (\n          <p className="text-sm text-secondary-500 mt-1">{helperText}</p>\n        )}\n      </div>\n    );\n  }\n);\n\nInput.displayName = \'Input\';\n\nexport default Input;\n</create-file>\n</function_calls>'}